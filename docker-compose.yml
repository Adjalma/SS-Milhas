# Docker Compose para Sistema de Gestão de Milhas
# Configuração completa com MongoDB, Redis e aplicação

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: gestao-milhas-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: gestao-milhas
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - gestao-milhas-network

  # Redis Cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: gestao-milhas-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gestao-milhas-network

  # Aplicação Principal
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gestao-milhas-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/gestao-milhas?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: seu_jwt_secret_super_seguro_aqui_mude_em_producao
      JWT_EXPIRES_IN: 7d
      REFRESH_TOKEN_SECRET: seu_refresh_token_secret_aqui
      EMAIL_SERVICE: gmail
      EMAIL_USER: seu_email@gmail.com
      EMAIL_PASS: sua_senha_de_app_do_gmail
      EMAIL_FROM: noreply@gestaomilhas.com
    depends_on:
      - mongodb
      - redis
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    networks:
      - gestao-milhas-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: gestao-milhas-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - gestao-milhas-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local

networks:
  gestao-milhas-network:
    driver: bridge
